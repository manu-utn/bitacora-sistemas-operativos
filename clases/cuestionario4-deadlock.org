#+TITLE: Clase 06 - Deadlock - Cuestionario
#+STARTUP: inlineimages
* Pregunta 1
  #+BEGIN_QUOTE
  Cuál de los siguientes recursos son reusables?
  #+END_QUOTE

  1. Señal
  2. Archivo
  3. Dispositivo IO
  4. Memoria
  5. Info de los buffers de IO
** Respuesta
  1. Archivo
  2. Dispositivo IO
  3. Memoria
** Observaciones
  1. La *info de los buffers* NO es reutilizable porque una vez
     que se la solicita al dispositivo de IO, ya no queda más en el buffer
     se vuelca a memoria.
* Pregunta 2
  #+BEGIN_QUOTE
  V/F:
  Siempre que se utilicen *mutex* antes de entrar a una PC, 
  evitaremos la *condición de carera* y los posibles *deadlock*
  #+END_QUOTE
** Respuesta
   Es *FALSA*, porque es una de las condiciones que aseguran
   que "quizás" haya *deadlock*
* Pregunta 3
  #+BEGIN_QUOTE
  Cual de los sig. es un síntoma de que posiblemente esté ocurriendo 
  un *deadlock* dentro de un conjunto de procesos con recursos compartidos?
  (sin tener en cuenta hilos)
  #+END_QUOTE
  
  a) Uno de los procesos bloqueados por mucho tiempo
  b) Al menos 2 procesos bloqueados por mucho tiempo
  c) Ambas son correctas
** Respuesta
  a) Al menos 2 procesos bloqueados por mucho tiempo
* Pregunta 4
  #+BEGIN_QUOTE
  V o F?
  El *deadlock* es un problema grave para los procesos involucrados ya que
  quedan bloqueados indefinidamente pero no afecta a otros procesos
  #+END_QUOTE
** Respuesta
   Es *FALSO*, porque los recursos que retienen esos procesos bloqueados
   impide que otros procesos los puedan utilizar.
* Pregunta 5
  #+BEGIN_QUOTE
  Cual de las siguientes afirmaciones son correctas al analizar un grafo?
  #+END_QUOTE
  
  a) Si contiene 1 ciclo, entonces existe deadlock
  b) Si contiene 1 ciclo, puede existir deadlock
  c) SI contiene 2 ciclos o más, existe deadlock
  d) Si NO existe ningun ciclo, NO hay deadlock
  e) Si NO existe ningun ciclo, NO hay ni habrá deadlock
  f) NInguna de las anteriores
** Respuesta
   b) Si contiene 1 ciclo, puede existir deadlock
   d) Si NO existe ningun ciclo, NO hay deadlock
** Respuestas INCORRECTAS
   a) c) están mal, porque puede haber ciclo con una *espera circular*
   pero igual tener suficientes *instancias*.
   Sería mejor decir que "puede existir" pero no decir "si, existe"

   e) está mal, porque luego puede aparecer una *espera circular*
* Pregunta 6
  #+BEGIN_QUOTE
  Cuales de las siguientes afirmaciones son verdaderas sobre la
  estrategia de *prevención*?
  #+END_QUOTE

  a) Suele tener un *overhead* menor al resto (con excepción de "no hacer nada")
  b) Puede ser muy restrictiva en la petición de recursos
  c) Se caracteriza por ser eficiente en el uso de recursos
  d) Ataca las condiciones necesarias para que ocurra deadlock
** Respuestas correctas
  a) Suele tener un *overhead* menor al resto (con excepción de "no hacer nada")
  b) Puede ser muy restrictiva en la petición de recursos
  d) Ataca las condiciones necesarias para que ocurra deadlock
* Pregunta 7
  #+BEGIN_QUOTE
  Qué podríamos analizar que nos ayude a _diferenciar_ si un conjunto
  de procesos se encuentran en *deadlock* ó en *livelock*?
  #+END_QUOTE

  a) El estado (new, ready, blocked) de los mismos
  b) El uso de CPU
  c) El uso de CPU Vs. Dispositivos (si es CPU-BOUND o IO-BOUND)
  d) Si cumplen "exclusión mutua"
** Respuestas correctas
  a) El estado (new, ready, blocked) de los mismos (/en caso que esté bloqueado/)
  b) El uso de CPU (/si produce overhead.../)

  *Observaciones:*
  - En el a) si están en *ready/running* pueden estar en *livelock*
    mientras que si están en *estado bloqueado* podrian estar en un *deadlock*
  - En el b) porque si están en *livelock* van a estar consumiendo CPU,
    mientras que los en *deadlock* NO porque estarán bloqueados
** Respuestas INCORRECTAS
   la d) porque  la *exclusión mutua* puede ocurrir en ambas
* Pregunta 8
  #+BEGIN_QUOTE
  CUales de las sig. afirmaciones son ciertas sobre el *estado seguro* ?
  #+END_QUOTE

  a) Requiere que cada proceso declare lo máximo que va a pedir de cada recurso
  b) Si se detecta un estado inseguro significa que podria ocurrir *deadlock*
  c) Si se detecta un *estado seguo* en la simulación de una petición se puede
     asegurar que NO generará *deadlock*
  d) Se tiene que calcular si el sistema queda en dicho estado con cada
     petición de un recurso
  e) ninguna es correcta
** Respuestas correctas
  a) Requiere que cada proceso declare lo máximo que va a pedir de cada recurso
  b) Si se detecta un estado inseguro significa que podria ocurrir *deadlock*
  c) Si se detecta un *estado seguo* en la simulación de una petición se puede
     asegurar que NO generará *deadlock*
  d) Se tiene que calcular si el sistema queda en dicho estado con cada
     petición de un recurso

  *Observaciones:*
  En la d) indica el porque se produce tanto *overhead* (al operar con matrices
  para calcular el estado)
* Pregunta 9
  #+BEGIN_QUOTE
  Cual de los siguientes procesos podrían sufrir *deadlock* ?
  #+END_QUOTE

  [[./img/cuestionario-deadlock-1.png]]
** Respuesta correcta
   - Sólo ~P1~ y ~P4~ porque piden y retienen los mismos recursos (R1,R2)
   
   *Observaciones:*
   - El ~P3~ NO participaría del *deadlock* porque tendrá *espera* por recursos
     que NO le serán dados
* Pregunta 10
  #+BEGIN_QUOTE
  V o F?
  La *estrategia de detección y recuperación* permite que ocurra *deadlock* pero 
  _flexibiliza la petición de recursos_. Además, nunca puede generar una situación
  de *starvation*
  #+END_QUOTE
** Respuesta
   Es *FALSO*, por el segundo parrafo.
   Según el criterio que elijamos  (/Ej. desalojar siempre al mismo recurso/)
   

